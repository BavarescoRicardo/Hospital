/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.ProntuarioDao;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Prontuario;

/**
 *
 * @author blank
 */
public class TelaDetalhesProntuario extends javax.swing.JInternalFrame {

    private int idPaciente;
    private ProntuarioDao prontuarioDao = new ProntuarioDao();
    private DefaultTableModel dtm;
    private JDesktopPane painel;
    private boolean diagnostico;
    private TelaDiagnostico telaDiagnostico = new TelaDiagnostico();
    
    private boolean procedimento;
    private TelaProcedimento telaProcedimento = new TelaProcedimento();

    public TelaDetalhesProntuario() {
        initComponents();

    }

    public void setDiagnostico(boolean diagnostico) {
        this.diagnostico = diagnostico;
    }

    public void setTelaDiagnostico(TelaDiagnostico telaDiagnostico) {
        this.btnDiagnostico.setEnabled(true);
        this.telaDiagnostico = telaDiagnostico;
    }
    
       public void setProcedimento(boolean procedimento) {
        this.procedimento = procedimento;
    }

    public void setTelaProcedimento(TelaProcedimento telaProcedimento) {
        this.btnProcedimento.setEnabled(true);
        this.telaProcedimento = telaProcedimento;
    }
    
 

    public void attTabela() {
        
        dtm = (DefaultTableModel) tabela.getModel();

        for (Prontuario prontuario : prontuarioDao.listar()) {
            if (prontuario.getPaciente().getIdPaciente() == idPaciente) {
                dtm.addRow(new Object[]{prontuario.getIdProntuario(), prontuario.getPaciente().getNOME(), prontuario.getMedico().getNOME(), prontuario.getLeito().getDescricao(), prontuario.getDataEntrada(), prontuario.getDataAlta()});
            }
        }
    }
    
    public void zerarTabela(){
        dtm.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnAlta = new javax.swing.JButton();
        btnDiagnostico = new javax.swing.JButton();
        btnProcedimento = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Paciente", "Medico", "Leito", "Entrada", "Alta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabela);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(0).setMinWidth(35);
            tabela.getColumnModel().getColumn(0).setPreferredWidth(30);
            tabela.getColumnModel().getColumn(0).setMaxWidth(40);
            tabela.getColumnModel().getColumn(1).setResizable(false);
            tabela.getColumnModel().getColumn(2).setResizable(false);
            tabela.getColumnModel().getColumn(3).setResizable(false);
            tabela.getColumnModel().getColumn(4).setResizable(false);
            tabela.getColumnModel().getColumn(5).setResizable(false);
        }

        btnAlta.setText("Alta");
        btnAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaActionPerformed(evt);
            }
        });

        btnDiagnostico.setText("Diagnostico");
        btnDiagnostico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiagnosticoActionPerformed(evt);
            }
        });

        btnProcedimento.setText("Procedimento");
        btnProcedimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcedimentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnProcedimento)
                .addGap(18, 18, 18)
                .addComponent(btnDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(btnAlta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnProcedimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDiagnostico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setPainel(JDesktopPane painel) {
        
        this.painel = painel;
    }

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnVoltarActionPerformed

    
    private void btnDiagnosticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiagnosticoActionPerformed
        String idProntuario = dtm.getValueAt(0, 0).toString();
        if (diagnostico) {
            if (dtm.getRowCount() > 0){
                    
                    String dataE = dtm.getValueAt(0, 4).toString();
                    telaDiagnostico.defineProntuario(dataE, idProntuario);
                    JOptionPane.showMessageDialog(rootPane, "Prontuario selecionado !");
                    this.setVisible(false);
            }else
                JOptionPane.showMessageDialog(rootPane, "Nao existe prontuario !");
        } else {
            
                TelaExibirDiagnostico telaExibeD = new TelaExibirDiagnostico();
                telaExibeD.setIdProntuario(Integer.parseInt(idProntuario));
                telaExibeD.attTabela();
                telaExibeD.setVisible(true);
                painel.add(telaExibeD);
            
        }
    }//GEN-LAST:event_btnDiagnosticoActionPerformed

    private void btnAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaActionPerformed
        DataAlta telaCalendario = new DataAlta();
        telaCalendario.setTela(this);
        telaCalendario.setIdProntuario(Integer.parseInt(dtm.getValueAt(0, 0).toString()));
        telaCalendario.setVisible(true);
    }//GEN-LAST:event_btnAltaActionPerformed

    private void btnProcedimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcedimentoActionPerformed
        String idProntuario = dtm.getValueAt(0, 0).toString();
        if (procedimento) {
            if (dtm.getRowCount() > 0){
                    
                    String dataE = dtm.getValueAt(0, 4).toString();
                    telaProcedimento.defineProntuario(dataE, idProntuario);
                    JOptionPane.showMessageDialog(rootPane, "Prontuario selecionado !");
                    this.setVisible(false);
            }else
                JOptionPane.showMessageDialog(rootPane, "Nao existe prontuario !");
        } else {
            
                TelaExibirDiagnostico telaExibeD = new TelaExibirDiagnostico();
                telaExibeD.setIdProntuario(Integer.parseInt(idProntuario));
                telaExibeD.attTabela();
                telaExibeD.setVisible(true);
                painel.add(telaExibeD);
            
        }
    }//GEN-LAST:event_btnProcedimentoActionPerformed

    public void setIdPaciente(int idP) {
        this.idPaciente = idP;

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlta;
    private javax.swing.JButton btnDiagnostico;
    private javax.swing.JButton btnProcedimento;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
